
package com.elusivehawk.caelum.render.gl;

/**
 * 
 * 
 * 
 * @author Elusivehawk
 */
public enum GLEnumPStatus
{
	GL_ACTIVE_ATOMIC_COUNTER_BUFFERS(GLConst.GL_ACTIVE_ATOMIC_COUNTER_BUFFERS),
	GL_ACTIVE_ATTRIBUTE_MAX_LENGTH(GLConst.GL_ACTIVE_ATTRIBUTE_MAX_LENGTH),
	GL_ACTIVE_ATTRIBUTES(GLConst.GL_ACTIVE_ATTRIBUTES),
	GL_ATTACHED_SHADERS(GLConst.GL_ATTACHED_SHADERS),
	GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH(GLConst.GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH),
	GL_ACTIVE_UNIFORM_BLOCKS(GLConst.GL_ACTIVE_UNIFORM_BLOCKS),
	GL_ACTIVE_UNIFORM_MAX_LENGTH(GLConst.GL_ACTIVE_UNIFORM_MAX_LENGTH),
	GL_ACTIVE_UNIFORMS(GLConst.GL_ACTIVE_UNIFORMS),
	GL_COMPUTE_WORK_GROUP_SIZE(GLConst.GL_COMPUTE_WORK_GROUP_SIZE),
	GL_DELETE_STATUS(GLConst.GL_DELETE_STATUS),
	GL_GEOMETRY_INPUT_TYPE(GLConst.GL_GEOMETRY_INPUT_TYPE),
	GL_GEOMETRY_OUTPUT_TYPE(GLConst.GL_GEOMETRY_OUTPUT_TYPE),
	GL_GEOMETRY_VERTICES_OUT(GLConst.GL_GEOMETRY_VERTICES_OUT),
	GL_INFO_LOG_LENGTH(GLConst.GL_INFO_LOG_LENGTH),
	GL_LINK_STATUS(GLConst.GL_LINK_STATUS),
	GL_PROGRAM_BINARY_LENGTH(GLConst.GL_PROGRAM_BINARY_LENGTH),
	GL_TRANSFORM_FEEDBACK_BUFFER_MODE(GLConst.GL_TRANSFORM_FEEDBACK_BUFFER_MODE),
	GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH(GLConst.GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH),
	GL_TRANSFORM_FEEDBACK_VARYINGS(GLConst.GL_TRANSFORM_FEEDBACK_VARYINGS),
	GL_VALIDATE_STATUS(GLConst.GL_VALIDATE_STATUS);
	
	public final int gl;
	
	@SuppressWarnings("unqualified-field-access")
	GLEnumPStatus(int i)
	{
		gl = i;
		
	}
	 
}
