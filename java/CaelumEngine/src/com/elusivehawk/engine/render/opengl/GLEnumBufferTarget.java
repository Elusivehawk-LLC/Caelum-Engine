
package com.elusivehawk.engine.render.opengl;

/**
 * 
 * 
 * 
 * @author Elusivehawk
 */
public enum GLEnumBufferTarget
{
	GL_ARRAY_BUFFER(GLConst.GL_ARRAY_BUFFER),
	GL_ATOMIC_COUNTER_BUFFER(GLConst.GL_ATOMIC_COUNTER_BUFFER),
	GL_COPY_READ_BUFFER(GLConst.GL_COPY_READ_BUFFER),
	GL_COPY_WRITE_BUFFER(GLConst.GL_COPY_WRITE_BUFFER),
	GL_DISPATCH_INDIRECT_BUFFER(GLConst.GL_DISPATCH_INDIRECT_BUFFER),
	GL_DRAW_INDIRECT_BUFFER(GLConst.GL_DRAW_INDIRECT_BUFFER),
	GL_ELEMENT_ARRAY_BUFFER(GLConst.GL_ELEMENT_ARRAY_BUFFER),
	GL_PIXEL_PACK_BUFFER(GLConst.GL_PIXEL_PACK_BUFFER),
	GL_PIXEL_UNPACK_BUFFER(GLConst.GL_PIXEL_UNPACK_BUFFER),
	GL_QUERY_BUFFER(GLConst.GL_QUERY_BUFFER),
	GL_SHADER_STORAGE_BUFFER(GLConst.GL_SHADER_STORAGE_BUFFER),
	GL_TEXTURE_BUFFER(GLConst.GL_TEXTURE_BUFFER),
	GL_TRANSFORM_FEEDBACK_BUFFER(GLConst.GL_TRANSFORM_FEEDBACK_BUFFER),
	GL_UNIFORM_BUFFER(GLConst.GL_UNIFORM_BUFFER);
	
	private final int glId;
	
	@SuppressWarnings("unqualified-field-access")
	GLEnumBufferTarget(int gl)
	{
		glId = gl;
		
	}
	
	public int getGLId()
	{
		return this.glId;
	}
	
}
